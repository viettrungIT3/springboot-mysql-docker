# ===========================================
# Spring Boot + MySQL + Docker Environment
# ===========================================
# 
# üîß QUICK START:
# - Backend API: http://localhost:8080
# - Frontend: http://localhost:3000  
# - Swagger UI: http://localhost:8080/swagger-ui.html
# - MySQL: localhost:3306
# ===========================================

# ------------------ Database Configuration ------------------
# üóÑÔ∏è MySQL Database Settings
# 
# MYSQL_ROOT_PASSWORD: M·∫≠t kh·∫©u cho root user c·ªßa MySQL
# MYSQL_DATABASE: T√™n database s·∫Ω ƒë∆∞·ª£c t·∫°o t·ª± ƒë·ªông
# MYSQL_USER: Username ƒë·ªÉ ·ª©ng d·ª•ng k·∫øt n·ªëi database
# MYSQL_PASSWORD: M·∫≠t kh·∫©u cho user tr√™n
# MYSQL_PORT: Port MySQL (m·∫∑c ƒë·ªãnh 3306)
# MYSQL_HOST: Hostname c·ªßa MySQL container (kh√¥ng ƒë·ªïi khi d√πng Docker)
MYSQL_ROOT_PASSWORD=root
MYSQL_DATABASE=appdb
MYSQL_USER=appuser
MYSQL_PASSWORD=apppass
MYSQL_PORT=3306
MYSQL_HOST=mysql

# üîó Database Connection String
# Spring Boot s·∫Ω s·ª≠ d·ª•ng URL n√†y ƒë·ªÉ k·∫øt n·ªëi MySQL
# Format: jdbc:mysql://host:port/database?options
SPRING_DATASOURCE_URL=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
SPRING_DATASOURCE_DRIVER_CLASS_NAME=com.mysql.cj.jdbc.Driver

# ------------------ Backend Configuration ------------------
# üöÄ Spring Boot Application Settings
#
# SPRING_PROFILES_ACTIVE: M√¥i tr∆∞·ªùng ch·∫°y (dev/test/prod)
# BACKEND_PORT: Port cho Spring Boot API
SPRING_PROFILES_ACTIVE=dev
BACKEND_PORT=8080

# üóÉÔ∏è JPA/Hibernate Configuration
# 
# JPA_DDL_AUTO: C√°ch qu·∫£n l√Ω database schema
#   - none: Kh√¥ng t·ª± ƒë·ªông t·∫°o/s·ª≠a schema (d√πng Flyway migrations)
#   - create: T·∫°o m·ªõi schema m·ªói l·∫ßn kh·ªüi ƒë·ªông (‚ö†Ô∏è M·∫•t d·ªØ li·ªáu)
#   - update: C·∫≠p nh·∫≠t schema (‚ö†Ô∏è C√≥ th·ªÉ g√¢y l·ªói)
#   - validate: Ch·ªâ ki·ªÉm tra schema c√≥ ƒë√∫ng kh√¥ng
# JPA_SHOW_SQL: Hi·ªÉn th·ªã SQL queries trong console (h·ªØu √≠ch cho debug)
JPA_DDL_AUTO=none
JPA_SHOW_SQL=true

# üå± Seed Data Configuration (Ch·ªâ cho dev/test)
# 
# APP_SEED_ENABLED: B·∫≠t/t·∫Øt vi·ªác t·∫°o d·ªØ li·ªáu m·∫´u khi kh·ªüi ƒë·ªông
# APP_SEED_PRODUCTS: S·ªë l∆∞·ª£ng s·∫£n ph·∫©m m·∫´u s·∫Ω t·∫°o
# APP_SEED_CUSTOMERS: S·ªë l∆∞·ª£ng kh√°ch h√†ng m·∫´u s·∫Ω t·∫°o
APP_SEED_ENABLED=true
APP_SEED_PRODUCTS=20
APP_SEED_CUSTOMERS=10

# üîê JWT Authentication Configuration
# 
# JWT_SECRET: Secret key ƒë·ªÉ k√Ω JWT tokens (‚ö†Ô∏è Ph·∫£i thay ƒë·ªïi trong production!)
# JWT_EXPIRATION: Th·ªùi gian h·∫øt h·∫°n c·ªßa token (milliseconds)
#   - 86400000 = 24 gi·ªù
#   - 3600000 = 1 gi·ªù
JWT_SECRET=mySecretKey123456789012345678901234567890
JWT_EXPIRATION=86400000

# üìù Logging Configuration
# 
# LOG_LEVEL: M·ª©c ƒë·ªô log (DEBUG/INFO/WARN/ERROR)
# DEBUG: Hi·ªÉn th·ªã t·∫•t c·∫£ logs (r·∫•t chi ti·∫øt)
# INFO: Logs th√¥ng tin chung (khuy·∫øn ngh·ªã cho dev)
# WARN: Ch·ªâ warnings v√† errors
# ERROR: Ch·ªâ errors
LOG_LEVEL=INFO

# ------------------ Frontend Configuration ------------------
# üåê Next.js Frontend Settings
# 
# FRONTEND_PORT: Port cho Next.js application
FRONTEND_PORT=3000

# ------------------ CORS Configuration ------------------
# üåç Cross-Origin Resource Sharing Settings
# 
# CORS_ALLOWED_ORIGINS: C√°c domain ƒë∆∞·ª£c ph√©p g·ªçi API t·ª´ browser
# Format: domain1,domain2,domain3
# V√≠ d·ª•: http://localhost:3000,https://myapp.com
# ‚ö†Ô∏è KH√îNG s·ª≠ d·ª•ng wildcard (*) trong production!
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173

# CORS_ALLOWED_HEADERS: C√°c headers ƒë∆∞·ª£c ph√©p trong CORS requests
# Th∆∞·ªùng bao g·ªìm: Authorization, Content-Type, Accept, X-Requested-With, Origin
CORS_ALLOWED_HEADERS=Authorization,Content-Type,Accept,X-Requested-With,Origin

# CORS_ALLOWED_METHODS: C√°c HTTP methods ƒë∆∞·ª£c ph√©p
# Th∆∞·ªùng bao g·ªìm: GET, POST, PUT, PATCH, DELETE, OPTIONS
CORS_ALLOWED_METHODS=GET,POST,PUT,PATCH,DELETE,OPTIONS

# CORS_ALLOW_CREDENTIALS: Cho ph√©p g·ª≠i credentials (cookies, auth headers)
# true: Cho ph√©p g·ª≠i credentials (khuy·∫øn ngh·ªã cho API)
# false: Kh√¥ng cho ph√©p g·ª≠i credentials
CORS_ALLOW_CREDENTIALS=true

# CORS_EXPOSED_HEADERS: C√°c headers ƒë∆∞·ª£c expose cho client
# Th∆∞·ªùng bao g·ªìm: Authorization ƒë·ªÉ client c√≥ th·ªÉ ƒë·ªçc token
CORS_EXPOSED_HEADERS=Authorization

# CORS_MAX_AGE: Th·ªùi gian cache preflight requests (gi√¢y)
# 3600 = 1 gi·ªù (khuy·∫øn ngh·ªã cho dev)
# 1800 = 30 ph√∫t (khuy·∫øn ngh·ªã cho production)
CORS_MAX_AGE=3600

# CORS_ENABLE_LOGGING: B·∫≠t/t·∫Øt logging CORS requests
# true: B·∫≠t logging (h·ªØu √≠ch cho debug)
# false: T·∫Øt logging (khuy·∫øn ngh·ªã cho production)
CORS_ENABLE_LOGGING=true

# ------------------ Rate Limiting Configuration ------------------
# üö¶ Rate Limiting Settings using Bucket4j
# 
# RATE_LIMIT_ENABLED: B·∫≠t/t·∫Øt rate limiting
# true: B·∫≠t rate limiting (khuy·∫øn ngh·ªã cho production)
# false: T·∫Øt rate limiting (ch·ªâ cho development)
RATE_LIMIT_ENABLED=true

# RATE_LIMIT_PUBLIC_REQUESTS: S·ªë requests cho ph√©p cho public endpoints
# V√≠ d·ª•: 100 = 100 requests per minute cho /api/v1/products, /actuator/health
RATE_LIMIT_PUBLIC_REQUESTS=100

# RATE_LIMIT_PUBLIC_WINDOW_SECONDS: Th·ªùi gian window cho public endpoints (gi√¢y)
# V√≠ d·ª•: 60 = 1 ph√∫t
RATE_LIMIT_PUBLIC_WINDOW_SECONDS=60

# RATE_LIMIT_API_REQUESTS: S·ªë requests cho ph√©p cho API endpoints
# V√≠ d·ª•: 200 = 200 requests per minute cho /api/**
RATE_LIMIT_API_REQUESTS=200

# RATE_LIMIT_API_WINDOW_SECONDS: Th·ªùi gian window cho API endpoints (gi√¢y)
RATE_LIMIT_API_WINDOW_SECONDS=60

# RATE_LIMIT_AUTH_REQUESTS: S·ªë requests cho ph√©p cho auth endpoints (b·∫£o m·∫≠t cao)
# V√≠ d·ª•: 10 = 10 requests per minute cho /auth/** (ch·ªëng brute force)
RATE_LIMIT_AUTH_REQUESTS=10

# RATE_LIMIT_AUTH_WINDOW_SECONDS: Th·ªùi gian window cho auth endpoints (gi√¢y)
RATE_LIMIT_AUTH_WINDOW_SECONDS=60

# RATE_LIMIT_ENABLE_LOGGING: B·∫≠t/t·∫Øt logging rate limit
# true: B·∫≠t logging (h·ªØu √≠ch cho debug)
# false: T·∫Øt logging (khuy·∫øn ngh·ªã cho production)
RATE_LIMIT_ENABLE_LOGGING=true

# RATE_LIMIT_MESSAGE: Th√¥ng b√°o khi v∆∞·ª£t rate limit
RATE_LIMIT_MESSAGE=Rate limit exceeded. Please try again later.
