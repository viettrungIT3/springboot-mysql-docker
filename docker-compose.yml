services:
  mysql:
    image: mysql:8.4
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-appdb}
      MYSQL_USER: ${MYSQL_USER:-appuser}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-prod}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}

      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL:-jdbc:mysql://${MYSQL_HOST:-mysql}:${MYSQL_PORT:-3306}/${MYSQL_DATABASE:-appdb}?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC}
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:-appuser}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD}
      SPRING_JPA_HIBERNATE_DDL_AUTO: ${JPA_DDL_AUTO:-none}
      SPRING_JPA_SHOW_SQL: "${JPA_SHOW_SQL:-true}"
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:-com.mysql.cj.jdbc.Driver}

      # ---- Seed config (áp dụng cho dev/test; prod nên để false) ----
      APP_SEED_ENABLED: ${APP_SEED_ENABLED:-false}
      APP_SEED_PRODUCTS: ${APP_SEED_PRODUCTS:-20}
      APP_SEED_CUSTOMERS: ${APP_SEED_CUSTOMERS:-10}

      # ---- JWT Configuration ----
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-86400000}
      
      # CORS configuration from .env
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-http://localhost:${FRONTEND_PORT:-3000}}
    ports:
      - "${BACKEND_PORT:-8080}:${BACKEND_PORT:-8080}"
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

  # Service for running unit tests
  test-runner:
    build:
      context: ./backend
      dockerfile: Dockerfile.test
    container_name: test-runner
    working_dir: /app
    volumes:
      - ./backend/build:/app/build
      - ./backend/src:/app/src:ro
    profiles:
      - test

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - NODE_ENV=development
      # API URL from .env
      - NEXT_PUBLIC_API_URL=http://localhost:${BACKEND_PORT:-8080}
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
    driver: local

